name: Build
permissions:
  "contents": "write"

on:

  workflow_dispatch:

    inputs:

      build_tag:
        description: Build tag
        required: true
        default: dry-run
        type: string

      build_version_override:
        description: Override the version of the distribution
        required: false
        default: ""
        type: string

jobs:

  main:

    runs-on: "ubuntu-latest"

    outputs:

      distribution: ${{ steps.set-output.outputs.distribution }}
      build_type: ${{ steps.set-output.outputs.build_type }}
      build_version: ${{ steps.set-output.outputs.build_version }}
      build_version_override: ${{ steps.set-output.outputs.build_version_override }}
      build_tag: ${{ steps.set-output.outputs.build_tag }}
      build_ref: ${{ steps.set-output.outputs.build_ref }}

    env:

      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - name: Setup Environment
        id: setup-environment
        shell: bash
        run: |
          echo "build_tag=${{inputs.build_tag}}" >> "$GITHUB_ENV"
          echo "build_version_override=${{inputs.build_version_override}}" >> "$GITHUB_ENV"

      - name: Checkout
        id: checkout
        uses: com-gft-deuba/sdodtools/.github/actions/checkout-tag@develop-workflows
        with:
          build_directory: .
          build_tag: ${{ env.build_tag }}

      - name: Setup Environment from checkout
        id: setup-environment-from-checkout
        shell: bash
        run: |
          echo "build_stamp=${{ steps.checkout.outputs.build_stamp }}" >> "$GITHUB_ENV"
          echo "build_type=${{ steps.checkout.outputs.build_type }}" >> "$GITHUB_ENV"
          echo "build_tag=${{ steps.checkout.outputs.build_tag }}" >> "$GITHUB_ENV"
          echo "build_version=${{ steps.checkout.outputs.build_version }}" >> "$GITHUB_ENV"
          echo "build_ref=${{ steps.checkout.outputs.build_ref }}" >> "$GITHUB_ENV"

      - name: Show variables
        id: show-vars
        shell: bash
        run: |
          echo "build_stamp='$build_stamp'."
          echo "build_type='$build_type'."
          echo "build_version='$build_version'."
          echo "build_version_override='$build_version_override'."
          echo "build_tag='$build_tag'."
          echo "build_ref='$build_ref'."

      - name: Building distribution
        id: build
        uses: com-gft-deuba/sdodtools/.github/actions/build-directory@develop-workflows
        with:
          build_directory: .
          build_tag: ${{ env.build_tag }}
          build_version: ${{ env.build_version }}
          build_version_override: ${{ env.build_version_override }}
          build_type: ${{ env.build_type }}
          build_ref: ${{ env.build_ref }}

      - name: Set output
        id: set-output
        shell: bash
        run: |
          distribution='${{ steps.build.outputs.distribution }}'
          build_ref='${{ steps.build.outputs.build_ref }}'
          echo "distribution=${{ steps.build.outputs.distribution }}" >> "$GITHUB_ENV"
          echo "build_ref=${{ steps.build.outputs.build_ref }}" >> "$GITHUB_ENV"
          
          echo "distribution=$distribution"   >> "$GITHUB_OUTPUT"
          echo "build_type=$build_type"       >> "$GITHUB_OUTPUT"
          echo "build_version=$build_version" >> "$GITHUB_OUTPUT"
          echo "build_version_override=$build_version_override" >> "$GITHUB_OUTPUT"
          echo "build_tag=$build_tag"         >> "$GITHUB_OUTPUT"
          echo "build_ref=$build_ref"         >> "$GITHUB_OUTPUT"

          echo "Set distribution='$distribution'."
          echo "Set build_type='$build_type'."
          echo "Set build_version='$build_version'."
          echo "Set build_version_override='$build_version_override'."
          echo "Set build_tag='$build_tag'."
          echo "Set build_ref='$build_ref'."

